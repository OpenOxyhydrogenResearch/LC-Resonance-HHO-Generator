

xsde_path = SConsEnvironment("xsde_path")
print(xsde_path)

xsde_bin = env.GetProjectOption("xsde_bin")
cxx_hybrid = (" cxx-hybrid " if env.GetProjectOption("cxx-hybrid")==true else "" )
generate_parser = (" --generate-parser " if env.GetProjectOption("generate-parser")==true else "" )
generate_serialize = (" --generate-serializer " if env.GetProjectOption("generate-serializer")==true else "" )
generate_aggregate = (" --generate-aggregate " if env.GetProjectOption("generate-aggregate")==true else "" )
output_dir = ((" --output-dir "+env.GetProjectOption("output-dir")+" ") if env.GetProjectOption("output-dir")!="" else "" )
xml_data_file = ((" "+env.GetProjectOption("xml_data_file")+" ") if env.GetProjectOption("xml_data_file")!="" else "" )

def mytarget_callback(*args, **kwargs):
    print("Hello PlatformIO!")
    env.Execute(xsde_path + xsde_bin + " " \
        + cxx_hybrid + generate_parser + generate_serialize + generate_aggregate \
        + output_dir + xml_data_file)

env.AddCustomTarget("xsde", None, mytarget_callback)



# extra_scripts = pre:extra_script.py

xsde_path = .\tools\windows\xsde-3.2.0-i686-windows\bin\
xsde_bin = xsde.exe
cxx-hybrid = true
generate-parser = true
generate-serializer = false
generate-aggregate = true
output-dir = .\include\UIX_SCHEMA\
xml_data_file = uix_schema.xsd



lib_extra_dirs = 
	C:\Users\The_E\OneDrive\Documents\PlatformIO\Projects\H20-DECOMPOSITION\tools\windows\xsde-3.2.0-i686-windows\libxsde\
	C:\Users\The_E\OneDrive\Documents\PlatformIO\Projects\H20-DECOMPOSITION\tools\windows\xsde-3.2.0-i686-windows\libxsde\c\
	C:\Users\The_E\OneDrive\Documents\PlatformIO\Projects\H20-DECOMPOSITION\tools\windows\xsde-3.2.0-i686-windows\libxsde\cxx\

Slack Invitation URL:
https://join.slack.com/t/newworkspace-na27698/shared_invite/zt-lvzse9tf-9eFK67sRuo6wDjK_XeVJwA


This is the very beginning of the lc-resonance-hho-generator-controller-interface channel
This channel is for working on a project. Hold meetings, share docs, and make decisions together with your team. Edit description


mkdir build
cd build
cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=..\..   ..\..\xerces-c-3.2.3\src
cmake --build . --config Debug
ctest -V -C Debug -j 4
cmake --build . --config Debug --target install 